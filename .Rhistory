##########################################################################################
library(workingfunctions)
library(catR)
library(foreach)
library(doSNOW)
options(width=160)
set.seed(12345)
itemBank<-genDichoMatrix(items=300,model="1PL",bPrior=c("norm",0,1))
plot_histogram(itemBank$b,title="beta parameter histogram")
data<-genPattern(th=seq(-3,3,length=1000),it=itemBank,model=NULL,seed=1)
responses<-data.frame(data)
mirt_model<-mirt::mirt(data=data.frame(data),model=1,itemtype="Rasch",technical=list(theta_lim=c(-3,3),NCYCLES=10000))
start<-list(theta=0,nrItems=5,randomesque=5,startSelect="MFI")
test<-list(method="BM",itemSelect="MFI",randomesque=5,range=c(-20,20))
final<-list(method="BM",range=c(-20,20))
stop<-list(rule=c("length"),thr=c(18))
cl<-makeCluster(parallel::detectCores())
registerDoSNOW(cl)
cl<-makeCluster(parallel::detectCores())
registerDoSNOW(cl)
result<-foreach(participant=1:nrow(data),.combine=rbind,.packages=c("catR")) %dopar% {
rc_result<-randomCAT(itemBank=itemBank,model=NULL,responses=data[participant,],start=start,test=test,stop=stop,final=final)
data.frame(questions=length(rc_result$thetaProv),est_theta=rc_result$thFinal,se=rc_result$seFinal,test_items=t(rc_result$testItems))
}
stopCluster(cl)
test_items<-result[,grep("test",names(result))]
test_items
freq<-data.frame(table(sort(as.vector(t(test_items)))))
names(freq)<-c("Item Number","Frequency")
plot_histogram(freq$Frequency,title="Number of times of spesific occurences of items")
ggplot(freq,aes(x=Frequency))+
geom_histogram(bins=100,na.rm=TRUE,fill="black",color="white")+
theme_bw(base_size=10)+
labs(x="Number of occurences of an item",y="Count of number of items reoccuring")
ggplot(freq,aes(x=Var1,y=Freq))+
geom_bar(stat="identity")+
labs(x="",y="Count",title="")+
coord_flip()+
theme_bw(base_size=10)
# Sample Data
questions <- 1:12  # Number of questions
theta_estimates <- c(2.0, 2.0, 2.0, 1.8, 2.0, 2.4, 3.2, 3.5, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
# Plot
plot(questions, theta_estimates, type = "o", col = "red", pch = 16, lwd = 2,
xlab = "Σειρά ερωτημάτων που εμφανίστηκαν",
ylab = "Εκτίμηση Σκορ",
main = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο")
# Add asterisk for the starting point
points(questions[1], theta_estimates[1], pch = 8, col = "black")
text(questions[1], theta_estimates[1], labels = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)", pos = 4, cex = 0.8)
# Plot
plot(questions, theta_estimates, type = "o", col = "red", pch = 16, lwd = 2,
xlab = "Σειρά ερωτημάτων που εμφανίστηκαν",
ylab = "Εκτίμηση Σκορ",
main = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο")
# Add asterisk for the starting point
points(questions[1], theta_estimates[1], pch = 8, col = "black")
text(questions[1], theta_estimates[1], labels = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)", pos = 4, cex = 0.8)
theta_estimates <- c(-2, -2, -2, 0, 0.5, 1, 2, 3, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
questions <- 1:12  # Number of questions
theta_estimates <- c(-2, -2, -2, 0, 0.5, 1, 2, 3, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
# Plot
plot(questions, theta_estimates, type = "o", col = "red", pch = 16, lwd = 2,
xlab = "Σειρά ερωτημάτων που εμφανίστηκαν",
ylab = "Εκτίμηση Σκορ",
main = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο")
# Add asterisk for the starting point
points(questions[1], theta_estimates[1], pch = 8, col = "black")
text(questions[1], theta_estimates[1], labels = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)", pos = 4, cex = 0.8)
# Sample Data
data <- data.frame(
Question = 1:12,  # Number of questions
Theta = c(2.0, 2.0, 2.0, 1.8, 2.0, 2.4, 3.2, 3.5, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = 2.1, label = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
theme_minimal() +
theme(
text = element_text(size = 12),
plot.title = element_text(hjust = 0.5)
)
# Sample Data
data <- data.frame(
Question = 1:12,  # Number of questions
Theta = c(-2, -2, -2, 0, 0.5, 1, 2, 3, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = 2.1, label = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
theme_minimal() +
theme(
text = element_text(size = 12),
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 2, label = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
theme_minimal() +
theme(
text = element_text(size = 12),
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα μέτριας δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
theme_minimal() +
theme(
text = element_text(size = 12),
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +
theme_minimal() +
theme(
text = element_text(size = 12),
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
text = element_text(size = 12),
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
plot.title = element_text(hjust = 0.5)
)
# Sample Data
data <- data.frame(
Question = 1:12,  # Number of questions
Theta = c(-2, -2, -2, -3, 0.5, 1, 2, 3, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
plot.title = element_text(hjust = 0.5)
)
# Sample Data
data <- data.frame(
Question = 1:12,  # Number of questions
Theta = c(-2, -2, -2, -3, 0.5, 1, 2, 3, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
plot.title = element_text(hjust = 0.5)
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
plot.title = element_text(hjust = 0.5)
)
# Sample Data
data <- data.frame(
Question = 1:12,  # Number of questions
Theta = c(-2, -2, -2, -3, 0.5, 1, 2, 3, 4.0, 4.3, 4.5, 4.8)  # Theta estimations
)
# Create the plot
ggplot(data, aes(x = Question, y = Theta)) +
geom_line(color = "blue", size = 1) +                # Line connecting points
geom_point(color = "red", size = 3) +               # Red points
geom_point(data = data[1, ], aes(x = Question, y = Theta), shape = 8, size = 4) +  # Asterisk at starting point
annotate("text", x = 1.5, y = - 3, label = "*Σημείο εκκίνησης\n(ερωτήματα χαμηλής δυσκολίας)",
hjust = 0, size = 4, color = "black") +    # Annotation for starting point
labs(
title = "Παράδειγμα μεθοδολογίας CAT IRT σε ένα άτομο",
x = "Σειρά ερωτημάτων που εμφανίστηκαν",
y = "Εκτίμηση Σκορ"
) +
scale_x_continuous(breaks = 1:12) +  # Set breaks for x-axis
theme_bw(base_size=20) +
theme(
plot.title = element_text(hjust = 0.5)
)
##########################################################################################
# LOAD
##########################################################################################
library(workingfunctions)
library(catR)
library(foreach)
library(doSNOW)
itemBank<-genDichoMatrix(items=300,model="2PL",aPrior=c("norm",1,1),bPrior=c("norm",1,1))
hist(itemBank$b,xlab="beta coefficient",main="Histogram")
hist(itemBank$a,xlab="alpha coefficient",main="Histogram")
mirt::mirtCluster(20)
set.seed(12345)
data<-genPattern(th=seq(-6,6,length=1000),it=itemBank,model=NULL,seed=1)
mirt_model<-mirt::mirt(data=data.frame(data),model=1,itemtype="Rasch",technical=list(theta_lim=c(-6,6),NCYCLES=10000))
start<-list(theta=0,nrItems=1,startSelect="bOpt")
test<-list(method="BM",itemSelect="bOpt",randomesque=5,range=c(-20,20))
final<-list(method="BM",range=c(-20,20))
stop<-list(rule=c("length","precision"),thr=c(40,0.3))
cl<-makeCluster(parallel::detectCores())
registerDoSNOW(cl)
result<-foreach(participant=1:nrow(data),.combine=rbind,.packages=c("catR")) %dopar% {
rc_result<-randomCAT(itemBank=itemBank,model=NULL,responses=data[participant,],start=start,test=test,stop=stop,final=final)
data.frame(questions=length(rc_result$thetaProv),est_theta=rc_result$thFinal,se=rc_result$seFinal)
}
stopCluster(cl)
result<-data.frame(result,mirt_scores=as.numeric(mirt::fscores(mirt_model)))
par(mfrow=c(3,2),mai=c(.5,.5,.2,.2))
plot(result$est_theta,result$mirt_scores,xlab="CAT Theta",ylab="mirt Theta",main=paste("Pearson r",round(cor(result$est_theta,result$mirt_scores),4)))
plot(result$questions,result$est_theta,xlab="Questions asked",ylab="CAT Theta")
plot(result$questions,result$se,xlab="Questions asked",ylab="SE")
plot(result$est_theta,result$se,xlab="CAT Theta",ylab="SE")
plot(table(round(result$est_theta,0)),xlab="CAT Theta",ylab="Frequency",main="")
plot(table(round(result$mirt_scores,0)),xlab="mirt Theta",ylab="Frequency",main="")
result_simulate_respondents<-simulateRespondents(thetas=seq(-6,6,.001),itemBank=itemBank,genSeed=NULL,start=start,test=test,stop=stop,final=final)
result_simulate_respondents
plot(result_simulate_respondents)
itemBank<-genDichoMatrix(items=300,model="2PL",aPrior=c("norm",1,1),bPrior=c("norm",1,1))
hist(itemBank$b,xlab="beta coefficient",main="Histogram")
hist(itemBank$a,xlab="alpha coefficient",main="Histogram")
itemBank<-genDichoMatrix(items=300,model="2PL",aPrior=c("norm",0,1),bPrior=c("norm",0,1))
hist(itemBank$b,xlab="beta coefficient",main="Histogram")
hist(itemBank$a,xlab="alpha coefficient",main="Histogram")
mirt::mirtCluster(20)
set.seed(12345)
data<-genPattern(th=seq(-6,6,length=1000),it=itemBank,model=NULL,seed=1)
mirt_model<-mirt::mirt(data=data.frame(data),model=1,itemtype="Rasch",technical=list(theta_lim=c(-6,6),NCYCLES=10000))
start<-list(theta=0,nrItems=1,startSelect="bOpt")
test<-list(method="BM",itemSelect="bOpt",randomesque=5,range=c(-20,20))
final<-list(method="BM",range=c(-20,20))
stop<-list(rule=c("length","precision"),thr=c(40,0.3))
cl<-makeCluster(parallel::detectCores())
registerDoSNOW(cl)
result<-foreach(participant=1:nrow(data),.combine=rbind,.packages=c("catR")) %dopar% {
rc_result<-randomCAT(itemBank=itemBank,model=NULL,responses=data[participant,],start=start,test=test,stop=stop,final=final)
data.frame(questions=length(rc_result$thetaProv),est_theta=rc_result$thFinal,se=rc_result$seFinal)
}
stopCluster(cl)
result<-data.frame(result,mirt_scores=as.numeric(mirt::fscores(mirt_model)))
par(mfrow=c(3,2),mai=c(.5,.5,.2,.2))
plot(result$est_theta,result$mirt_scores,xlab="CAT Theta",ylab="mirt Theta",main=paste("Pearson r",round(cor(result$est_theta,result$mirt_scores),4)))
plot(result$questions,result$est_theta,xlab="Questions asked",ylab="CAT Theta")
plot(result$questions,result$se,xlab="Questions asked",ylab="SE")
plot(result$est_theta,result$se,xlab="CAT Theta",ylab="SE")
plot(table(round(result$est_theta,0)),xlab="CAT Theta",ylab="Frequency",main="")
plot(table(round(result$mirt_scores,0)),xlab="mirt Theta",ylab="Frequency",main="")
result_simulate_respondents<-simulateRespondents(thetas=seq(-6,6,.001),itemBank=itemBank,genSeed=NULL,start=start,test=test,stop=stop,final=final)
itemBank<-genDichoMatrix(items=300,model="1PL",aPrior=c("norm",0,1),bPrior=c("norm",0,1))
hist(itemBank$b,xlab="beta coefficient",main="Histogram")
hist(itemBank$a,xlab="alpha coefficient",main="Histogram")
mirt::mirtCluster(20)
set.seed(12345)
data<-genPattern(th=seq(-6,6,length=1000),it=itemBank,model=NULL,seed=1)
mirt_model<-mirt::mirt(data=data.frame(data),model=1,itemtype="Rasch",technical=list(theta_lim=c(-6,6),NCYCLES=10000))
start<-list(theta=0,nrItems=1,startSelect="bOpt")
test<-list(method="BM",itemSelect="bOpt",randomesque=5,range=c(-20,20))
final<-list(method="BM",range=c(-20,20))
stop<-list(rule=c("length","precision"),thr=c(40,0.3))
cl<-makeCluster(parallel::detectCores())
registerDoSNOW(cl)
result<-foreach(participant=1:nrow(data),.combine=rbind,.packages=c("catR")) %dopar% {
rc_result<-randomCAT(itemBank=itemBank,model=NULL,responses=data[participant,],start=start,test=test,stop=stop,final=final)
data.frame(questions=length(rc_result$thetaProv),est_theta=rc_result$thFinal,se=rc_result$seFinal)
}
stopCluster(cl)
result<-data.frame(result,mirt_scores=as.numeric(mirt::fscores(mirt_model)))
par(mfrow=c(3,2),mai=c(.5,.5,.2,.2))
plot(result$est_theta,result$mirt_scores,xlab="CAT Theta",ylab="mirt Theta",main=paste("Pearson r",round(cor(result$est_theta,result$mirt_scores),4)))
plot(result$questions,result$est_theta,xlab="Questions asked",ylab="CAT Theta")
plot(result$questions,result$se,xlab="Questions asked",ylab="SE")
plot(result$est_theta,result$se,xlab="CAT Theta",ylab="SE")
plot(table(round(result$est_theta,0)),xlab="CAT Theta",ylab="Frequency",main="")
plot(table(round(result$mirt_scores,0)),xlab="mirt Theta",ylab="Frequency",main="")
##########################################################################################
# LOAD
##########################################################################################
library(workingfunctions)
library(catR)
library(foreach)
library(doSNOW)
itemBank<-genDichoMatrix(items=300,model="1PL",aPrior=c("norm",0,1),bPrior=c("norm",0,1))
hist(itemBank$b,xlab="beta coefficient",main="Histogram")
hist(itemBank$a,xlab="alpha coefficient",main="Histogram")
mirt::mirtCluster(20)
set.seed(12345)
data<-genPattern(th=seq(-6,6,length=1000),it=itemBank,model=NULL,seed=1)
mirt_model<-mirt::mirt(data=data.frame(data),model=1,itemtype="Rasch",technical=list(theta_lim=c(-6,6),NCYCLES=10000))
start<-list(theta=0,nrItems=1,startSelect="bOpt")
test<-list(method="BM",itemSelect="bOpt",randomesque=5,range=c(-6,6))
final<-list(method="BM",range=c(-6,6))
stop<-list(rule=c("length","precision"),thr=c(40,0.3))
cl<-makeCluster(parallel::detectCores())
registerDoSNOW(cl)
result<-foreach(participant=1:nrow(data),.combine=rbind,.packages=c("catR")) %dopar% {
rc_result<-randomCAT(itemBank=itemBank,model=NULL,responses=data[participant,],start=start,test=test,stop=stop,final=final)
data.frame(questions=length(rc_result$thetaProv),est_theta=rc_result$thFinal,se=rc_result$seFinal)
}
stopCluster(cl)
result<-data.frame(result,mirt_scores=as.numeric(mirt::fscores(mirt_model)))
par(mfrow=c(3,2),mai=c(.5,.5,.2,.2))
plot(result$est_theta,result$mirt_scores,xlab="CAT Theta",ylab="mirt Theta",main=paste("Pearson r",round(cor(result$est_theta,result$mirt_scores),4)))
plot(result$questions,result$est_theta,xlab="Questions asked",ylab="CAT Theta")
plot(result$questions,result$se,xlab="Questions asked",ylab="SE")
plot(result$est_theta,result$se,xlab="CAT Theta",ylab="SE")
plot(table(round(result$est_theta,0)),xlab="CAT Theta",ylab="Frequency",main="")
plot(table(round(result$mirt_scores,0)),xlab="mirt Theta",ylab="Frequency",main="")
result_simulate_respondents<-simulateRespondents(thetas=seq(-6,6,.001),itemBank=itemBank,genSeed=NULL,start=start,test=test,stop=stop,final=final)
result_simulate_respondents
itemBank
hist(itemBank$b,xlab="beta coefficient",main="Histogram")
hist(itemBank$a,xlab="alpha coefficient",main="Histogram")
##########################################################################################
# LOAD
##########################################################################################
# https://www.researchgate.net/publication/351819194_Automated_Test_Assembly_in_R_The_eatATA_Package/fulltext/60abc30445851522bc12933e/Automated-Test-Assembly-in-R-The-eatATA-Package.pdf?origin=publication_detail&_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6InB1YmxpY2F0aW9uIiwicGFnZSI6InB1YmxpY2F0aW9uRG93bmxvYWQiLCJwcmV2aW91c1BhZ2UiOiJwdWJsaWNhdGlvbiJ9fQ
# https://www.mdpi.com/2624-8611/3/2/10
# https://cran.r-project.org/web/packages/eatATA/vignettes/overview.html
library(eatATA)
##########################################################################################
# LOAD
##########################################################################################
# https://www.researchgate.net/publication/351819194_Automated_Test_Assembly_in_R_The_eatATA_Package/fulltext/60abc30445851522bc12933e/Automated-Test-Assembly-in-R-The-eatATA-Package.pdf?origin=publication_detail&_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6InB1YmxpY2F0aW9uIiwicGFnZSI6InB1YmxpY2F0aW9uRG93bmxvYWQiLCJwcmV2aW91c1BhZ2UiOiJwdWJsaWNhdGlvbiJ9fQ
# https://www.mdpi.com/2624-8611/3/2/10
# https://cran.r-project.org/web/packages/eatATA/vignettes/overview.html
library(eatATA)
##########################################################################################
# EXAMPLE 1
##########################################################################################
nForms=1
items_mini$IIF_0<-calculateIIF(B=items_mini$difficulty,theta=0)
testInfo<-maxObjective(nForms=nForms,itemValues=items_mini$IIF,itemIDs=items_mini$item)
itemNumber<-itemsPerFormConstraint(nForms=nForms,operator="<=",targetValue=10,itemIDs=items_mini$item)
testTime<-itemValuesDeviationConstraint(nForms=nForms,itemValues=items_mini$time,targetValue=8*60,allowedDeviation=5,relative=FALSE,itemIDs=items_mini$item)
solver_out<-useSolver(list(itemNumber,testTime,testInfo),solver="GLPK")
inspectSolution(solver_out,items=items_mini,idCol="item")
item_mini_out<-appendSolution(solver_out,items=items_mini,idCol="item")
##########################################################################################
# EXAMPLE PILOT STUDY
##########################################################################################
items_pilot$time_in_min<-items_pilot$time/60
nForms<-ceiling(sum(items_pilot$time_in_min)/10)
timeCons<-minimaxObjective(nForms=nForms,itemValues=items_pilot$time_in_min,targetValue=10,itemIDs=items_pilot$item)
noItemOverlap<-itemUsageConstraint(nForms,targetValue=1,operator="=",itemIDs=items_pilot$item)
items_pilot$diffCategory<-as.factor(items_pilot$diffCategory)
equall_diff<-autoItemValuesMinMaxConstraint(nForms=nForms,itemValues=items_pilot$diffCategory,itemIDs=items_pilot$item)
equal_format<-autoItemValuesMinMaxConstraint(nForms=nForms,itemValues=items_pilot$format,itemIDs=items_pilot$item)
domainCons<-itemCategoryMinConstraint(nForms=nForms,itemCategories=items_pilot$domain,itemIDs=items_pilot$item,min=c(1,1,1))
exclusionTuples<-itemTuples(items_pilot,idCol="item",infoCol="exclusions",sepPattern=",")
excl_constraints<-itemExclusionConstraint(nForms=nForms,itemTuples=exclusionTuples,itemIDs=items_pilot$item)
library(thurstonianIRT)
data("triplets")
head(triplets)
blocks<-set_block(c("i1","i2","i3"),traits=c("t1","t2","t3"),signs=c(1,1,1))+set_block(c("i4","i5","i6"),traits=c("t1","t2","t3"),signs=c(-1,1,1))+set_block(c("i7","i8","i9"),traits=c("t1","t2","t3"),signs=c(1,1,-1))+set_block(c("i10","i11","i12"),traits=c("t1","t2","t3"),signs=c(1,-1,1))
blocks
triplets_long<-make_TIRT_data(data=triplets,blocks=blocks,direction="larger",format="pairwise",family="bernoulli",range=c(0,1))
head(triplets_long)
fit<-fit_TIRT_stan(triplets_long,chains=1)
?thurstonianIRT
plot(fit)
pr
pr<-predict(fit)
pr
sim_data<-sim_TIRT_data(npersons=200,ntraits=3,nblocks_per_trait=4,gamma=0,lambda=runif(12,0.5,1),Phi=diag(3))
head(sim_data)
N<-1
J<-1
N<-1
V<-1
J<-1
factorial(N)/(factorial(J)*factorial(N-J*V)*factorial(V)^J)
plot(fit)
fit
fit<-fit_TIRT_lavaan(triplets_long)
fit
plot(fit)
fit
plot_cfa(fit)
fit<-fit_TIRT_lavaan(triplets_long)
fit$fit
plot_cfa(fit$fit)
triplets_long
head(triplets)
install.packages(c("bayestestR", "bslib", "chromote", "curl", "DescTools", "doBy", "emmeans", "fastDummies", "gld", "httr2", "igraph", "Matrix", "mirt", "nlme", "openssl", "openxlsx", "parallelly", "quantreg", "RcppParallel", "renv", "rlang", "rsconnect", "systemfonts", "textshaping", "V8", "vegan", "zip"))
install_github("sedzinfo/enviro")
library(devtools)
install_github("sedzinfo/enviro")
library(enviro)
directory<-paste0(dirname(rstudioapi::getActiveDocumentContext()$path),"/")
setwd(directory)
# usethis::create_package("crypto")
document()
install()
install_github("sedzinfo/enviro")
